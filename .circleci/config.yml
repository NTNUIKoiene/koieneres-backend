# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      
      - run:
          name: install gcloud
          command: |
            curl -sSL https://sdk.cloud.google.com > /tmp/gcl && bash /tmp/gcl --install-dir=~/gcloud --disable-prompts


      - save_cache:
          paths:
            - ./venv
            - ~/gcloud
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run: 
          name: collect static files
          command: |
            . venv/bin/activate
            python manage.py collectstatic
      
      - run:
          name: deploy
          command: |
            echo $GCLOUD > /tmp/client-secret.json
            echo "env_variables:\n  DB_HOST: "${DB_HOST}"\n  DB_NAME: ${DB_NAME}\n  DB_USER: ${DB_USER}\n  DB_PASSWORD: ${DB_PASSWORD}\n  SECRET: ${SECRET}" > env.yaml
            ~/gcloud/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file /tmp/client-secret.json
            ~/gcloud/google-cloud-sdk/bin/gcloud config set project koieneres-api-dev
            ~/gcloud/google-cloud-sdk/bin/gcloud app deploy
